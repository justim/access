"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[318],{8217:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=e(5893),s=e(1151);const o={id:"transactions",title:"Transactions",slug:"/transactions"},c=void 0,i={id:"transactions",title:"Transactions",description:"Access provides a mechanism to use transactions.",source:"@site/../docs/transactions.md",sourceDirName:".",slug:"/transactions",permalink:"/docs/transactions",draft:!1,unlisted:!1,editUrl:"https://github.com/justim/access/edit/master/website/../docs/transactions.md",tags:[],version:"current",frontMatter:{id:"transactions",title:"Transactions",slug:"/transactions"},sidebar:"docs",previous:{title:"Presenters",permalink:"/docs/presenters"},next:{title:"Locks",permalink:"/docs/locks"}},r={},l=[{value:"Start transaction",id:"start-transaction",level:2},{value:"Commit transaction",id:"commit-transaction",level:2},{value:"Rollback transaction",id:"rollback-transaction",level:2}];function d(n){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Access provides a mechanism to use transactions."}),"\n",(0,a.jsx)(t.h2,{id:"start-transaction",children:"Start transaction"}),"\n",(0,a.jsxs)(t.p,{children:["To start a transaction you need a ",(0,a.jsx)(t.code,{children:"Access\\Database"})," instance and call\n",(0,a.jsx)(t.code,{children:"beginTransaction()"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",metastring:'title="Start transction"',children:"use Access\\Database;\n\n$db = new Database(..);\n\n$transaction = $db->beginTransaction();\n"})}),"\n",(0,a.jsx)(t.h2,{id:"commit-transaction",children:"Commit transaction"}),"\n",(0,a.jsxs)(t.p,{children:["Once you've done all changes you can commit the transaction with\n",(0,a.jsx)(t.code,{children:"Transaction::commit()"}),", this will send a ",(0,a.jsx)(t.code,{children:"COMMIT"})," query to the database"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",metastring:'title="Commit transaction"',children:"$transaction->commit();\n"})}),"\n",(0,a.jsx)(t.h2,{id:"rollback-transaction",children:"Rollback transaction"}),"\n",(0,a.jsxs)(t.p,{children:["If you're not happy with the changes you've made, most likely an invalid state\nsomewhere, somehow, you can roll back the changes you've made and prepend it\nnever happened. You can do this with ",(0,a.jsx)(t.code,{children:"Transaction::rollBack"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",metastring:'title="Roll back transaction"',children:"$transaction->rollBack();\n"})}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["Failing to either commit or rollback the will result in an exception, this\nhappens when the ",(0,a.jsx)(t.code,{children:"$transaction"})," instance goes out of scope. Make sure to keep it\naround for as long as you need to keep the transaction open."]})})]})}function h(n={}){const{wrapper:t}={...(0,s.a)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},1151:(n,t,e)=>{e.d(t,{Z:()=>i,a:()=>c});var a=e(7294);const s={},o=a.createContext(s);function c(n){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function i(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),a.createElement(o.Provider,{value:t},n.children)}}}]);